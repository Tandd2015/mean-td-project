{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\tandd\\\\Documents\\\\mean-td-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { NavigationStart, NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nfunction MapComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 2);\n  }\n}\n// import { google } from \"google-maps\";\n// declare var google: any;\nexport let MapComponent = /*#__PURE__*/(() => {\n  class MapComponent {\n    constructor(mapBreakPointObserver, router, route, httpClient) {\n      this.mapBreakPointObserver = mapBreakPointObserver;\n      this.router = router;\n      this.route = route;\n      this.httpClient = httpClient;\n      this.subscription = new Subscription();\n      this.googleStop = false;\n      this.subscription = router.events.subscribe(event => {\n        if (event instanceof NavigationStart) {\n          // this.browserRefresh = !router.navigated;\n          // this.router.navigated = false;\n          // this.router.navigateByUrl(event.url);\n          console.log(\"Moving Map\", event);\n          // if(google === undefined) {\n          // }\n        }\n\n        if (event instanceof NavigationEnd) {\n          // this.activeRouteApp = event.url;\n          // this.google = window.google;\n          console.log('Navigation End Map', event.url, event);\n        }\n        ;\n        // if (event instanceof NavigationError) {\n        //   this.router.navigateByUrl('/');\n        // }\n      });\n    }\n\n    ngOnInit() {\n      // this.mapBrakePoint$.subscribe((mapBrakePoints: any) => {\n      //   if(this.mapBrakePointObserver.isMatched('(max-width: 1120px)')) {\n      //     this.mapHeight = '15rem';\n      //   } else if(this.mapBrakePointObserver.isMatched('(max-width: 1616px)')) {\n      //     this.mapHeight = '20rem';\n      //   } else if(this.mapBrakePointObserver.isMatched('(min-width: 1617px)')) {\n      //     this.mapHeight = '30rem';\n      //   }\n      // });\n      // if(!google){\n      // }\n    }\n    ngOnChanges(changes) {\n      console.log(changes);\n    }\n    ngAfterViewInit() {\n      // this.mapBrakePoint$.subscribe((mapBrakePoints: any) => {\n      //   if(this.mapBrakePointObserver.isMatched('(max-width: 1120px)')) {\n      //     this.mapHeight = '15rem';\n      //   } else if(this.mapBrakePointObserver.isMatched('(max-width: 1616px)')) {\n      //     this.mapHeight = '20rem';\n      //   } else if(this.mapBrakePointObserver.isMatched('(min-width: 1617px)')) {\n      //     this.mapHeight = '30rem';\n      //   }\n      // });\n      // var google: any;\n      // while (document.readyState !== \"complete\") {\n      //   continue;\n      // };\n      let map;\n      function initMap() {\n        return _initMap.apply(this, arguments);\n      } // const APILoaded = async () =>{\n      //   console.log(\"api\", document.readyState);\n      //   let isAPILoaded = false;\n      //   while (isAPILoaded !== true) {\n      //     if (document.readyState === \"complete\") {\n      //       isAPILoaded = true;\n      //     };\n      //   };\n      //   initMap();\n      // };\n      // initMap();\n      // APILoaded();\n      function _initMap() {\n        _initMap = _asyncToGenerator(function* () {\n          const {\n            Map\n          } = yield google.maps.importLibrary(\"maps\");\n          map = new Map(document.getElementById(\"map\"), {\n            center: {\n              lat: 41.097255,\n              lng: -84.262551\n            },\n            zoom: 8\n          });\n          // await (document.readyState === \"complete\");\n        });\n        return _initMap.apply(this, arguments);\n      }\n      if (document.readyState === \"complete\") {\n        initMap();\n      }\n      if (document.readyState === \"interactive\") {\n        // setTimeout(() => {\n        //   console.log(\"Timing out\");\n        // },1000)\n      }\n      console.log(\"map\", document.readyState);\n    }\n    ngDoCheck() {\n      //Called every time that the input properties of a component or a directive are checked. Use it to extend change detection by performing a custom check.\n      //Add 'implements DoCheck' to the class.\n      // console.log(\"AfterC\", window.google);\n      // if(this.googleStop === false) {\n      //   let map: google.maps.Map;\n      //   async function initMap(): Promise<void> {\n      //     const { Map } = await google.maps.importLibrary(\"maps\") as google.maps.MapsLibrary;\n      //     map = new Map(document.getElementById(\"map\") as HTMLElement, {\n      //       center: { lat:41.097255, lng:-84.262551 },\n      //       zoom: 8,\n      //     });\n      //   }\n      //   this.googleStop = true;\n      //   // initMap();\n      // }\n    }\n    ngAfterViewChecked() {\n      // console.log(\"AfterC\", window.google);\n      // if(this.googleStop === false) {\n      //   let map: google.maps.Map;\n      //   async function initMap(): Promise<void> {\n      //     const { Map } = await google.maps.importLibrary(\"maps\") as google.maps.MapsLibrary;\n      //     map = new Map(document.getElementById(\"map\") as HTMLElement, {\n      //       center: { lat:41.097255, lng:-84.262551 },\n      //       zoom: 8,\n      //     });\n      //   }\n      //   this.googleStop = true;\n      //   // initMap();\n      // }\n    }\n    ngAfterContentInit() {\n      // console.log(\"After\", window.google);\n    }\n  }\n  MapComponent.ɵfac = function MapComponent_Factory(t) {\n    return new (t || MapComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n  MapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MapComponent,\n    selectors: [[\"app-map\"]],\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 1,\n    consts: [[\"id\", \"myMapContainer\", 1, \"row\"], [\"id\", \"map\", 4, \"ngIf\"], [\"id\", \"map\"]],\n    template: function MapComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, MapComponent_div_1_Template, 1, 0, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.googleStop === false);\n      }\n    },\n    directives: [i4.NgIf],\n    styles: [\"#myMapContainer[_ngcontent-%COMP%]{padding:0rem 3.25rem 2rem 3rem}#map[_ngcontent-%COMP%]{height:40rem;width:100%}@media only screen and (max-width: 688px){#myMapContainer[_ngcontent-%COMP%]{padding:0rem 2.5rem 2rem}}@media only screen and (max-width: 591px){#myMapContainer[_ngcontent-%COMP%]{padding:0rem 1.45rem 2rem}}\"]\n  });\n  return MapComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}