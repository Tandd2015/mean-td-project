{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { NavigationStart } from '@angular/router';\nimport { Subscription } from 'rxjs';\n// declare var google: any;\nlet AppComponent = class AppComponent {\n  // public mapHeight: string = '20rem';\n  // public mapWidth: string = '100%';\n  // public mapCenter: google.maps.LatLngLiteral | google.maps.LatLng = { lat:41.097255, lng:-84.262551 };\n  // public mapZoom: number = 8;\n  // public mapInfoContent: string = '';\n  // public mapOptions: google.maps.MapOptions = {\n  //   zoomControl: true,\n  //   scrollwheel: false,\n  //   disableDoubleClickZoom: true,\n  //   mapTypeId: \"roadmap\"\n  // }\n  // public mapMarkers: Array<any> = [\n  //   {\n  //     position: {\n  //       lat:41.097255,\n  //       lng:-84.262551\n  //     },\n  //     label: {\n  //       color: 'black',\n  //       text: 'Terry Dockery Investigations and Security Services'\n  //     },\n  //     title: 'Main Office',\n  //     info: '300 Oak St, Continental, OH, 45831',\n  //     options: {\n  //       animation: google.maps.Animation.BOUNCE,\n  //     }\n  //   },\n  //   {\n  //     position: {\n  //       lat:41.0149902517173,\n  //       lng:-84.0502639111812\n  //     },\n  //     label: {\n  //       color: 'black',\n  //       text: 'Service Area'\n  //     },\n  //     title: 'Terry Dockery Investigations and Security Services',\n  //     info: 'Ottawa, OH, Putnam County, 45875',\n  //     options: {\n  //       animation: google.maps.Animation.BOUNCE,\n  //     }\n  //   },\n  //   {\n  //     position: {\n  //       lat:41.646464836971916,\n  //       lng:-83.53340770525851\n  //     },\n  //     label: {\n  //       color: 'black',\n  //       text: \"Service Area\"\n  //     },\n  //     title: 'Terry Dockery Investigations and Security Services',\n  //     info: 'Toledo, OH, Locus County, All 31 zip codes',\n  //     options: {\n  //       animation: google.maps.Animation.BOUNCE,\n  //     }\n  //   },\n  //   {\n  //     position: {\n  //       lat:40.735712050206665,\n  //       lng:-84.10262203128673\n  //     },\n  //     label: {\n  //       color: 'black',\n  //       text: \"Service Area\"\n  //     },\n  //     title: 'Terry Dockery Investigations and Security Services',\n  //     info: 'Lima, OH, Allen County, 45801, 45804, 45805',\n  //     options: {\n  //       animation: google.maps.Animation.BOUNCE,\n  //     }\n  //   },\n  //   {\n  //     position: {\n  //       lat:41.043680929746166,\n  //       lng:-83.6495902743783,\n  //     },\n  //     label: {\n  //       color: 'black',\n  //       text: \"Service Area\"\n  //     },\n  //     title: 'Terry Dockery Investigations and Security Services',\n  //     info: 'Findlay, OH, Hancock County, 45839, 45840',\n  //     options: {\n  //       animation: google.maps.Animation.BOUNCE,\n  //     }\n  //   },\n  // ];\n  constructor(breakPointObserverTwo, router, route, httpClient) {\n    this.breakPointObserverTwo = breakPointObserverTwo;\n    this.router = router;\n    this.route = route;\n    this.httpClient = httpClient;\n    // public apiLoaded: Observable<boolean>;\n    this.actTwo = true;\n    this.breakPointTwo$ = this.breakPointObserverTwo.observe(['(max-width: 565px)']).pipe(distinctUntilChanged());\n    this.browserRefresh = false;\n    this.subscription = new Subscription();\n    // @ViewChild(GoogleMap, { static: false }) mapElem!: GoogleMap;\n    // @ViewChild(MapInfoWindow, { static: false }) mapInfo!: MapInfoWindow;\n    this.activeRouteApp = '';\n    this.google = window.google;\n    this.subscription = router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        // this.browserRefresh = !router.navigated;\n        // this.router.navigated = false;\n        // this.router.navigateByUrl(event.url);\n        console.log(\"Moving\", this.browserRefresh, event);\n        // if(google === undefined) {\n        // }\n      }\n\n      if (event instanceof NavigationEnd) {\n        this.activeRouteApp = event.url;\n        console.log('Navigation End App', event.url, this.activeRouteApp, this.route);\n      }\n      ;\n      // if (event instanceof NavigationError) {\n      //   this.router.navigateByUrl('/');\n      // }\n    });\n    // this.apiLoaded = this.httpClient.jsonp('https://maps.googleapis.com/maps/api/js?key=AIzaSyD1hlawt2V1ypXbjETNujSZR2gA8reaP8o', 'callback')\n    // .pipe(\n    //   map(() => true),\n    //   catchError(() => of(false)),\n    // );]\\\n    // google = window.google;\n  }\n\n  ngOnInit() {\n    this.breakPointTwo$.subscribe(breakpoints => {\n      this.breakpointChangedTwo();\n    });\n    this.initMap();\n    // console.log('googleApp.ts', google);\n    // let map: google.maps.Map;\n    // async function initMap(): Promise<void> {\n    //   const { Map } = await google.maps.importLibrary(\"maps\") as google.maps.MapsLibrary;\n    //   map = new Map(document.getElementById(\"map\") as HTMLElement, {\n    //     center: { lat:41.097255, lng:-84.262551 },\n    //     zoom: 8,\n    //   });\n    // }\n    // google = window.google;\n    // initMap();\n    // let hello: string = 'Hello';\n    // let world: string = 'World';\n    // window.hello = hello + world;\n    // console.log(\"Hello => \", window.google, google);\n  }\n\n  ngOnChanges(changes) {\n    for (let i in changes) {\n      console.log(`changes${i}`, changes[i]);\n    }\n  }\n  reloadComponent(self, urlToNavigateTo) {\n    console.log(\"Current route I am on: \", this.router.url);\n    const url = self ? this.router.url : urlToNavigateTo;\n    this.router.navigateByUrl('/', {\n      skipLocationChange: true\n    }).then(() => {\n      this.router.navigate([`/${url}`]).then(() => {\n        console.log(`After navigation I am on: ${this.router.url}`);\n      });\n    });\n  }\n  // ngAfterViewInit() {\n  // //   // particlesJS.load('particles-js', '../assets/data/particles.json', function() {\n  // //   //   console.log('callback - particles-js config loaded');\n  // //   // }, null);\n  // //   // console.log('googleApp.ts After', google);\n  // if(!google) {\n  //   console.log('Hello Google');\n  //   const gScript: any = document.createElement('script');\n  //   gScript.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyD1hlawt2V1ypXbjETNujSZR2gA8reaP8o&callback=Function.prototype&libraries=places&v=weekly';\n  //   gScript.type = 'text/javascript';\n  //   document.body.appendChild(gScript);\n  //   document.body.removeChild(gScript);\n  // }\n  // }\n  initMap() {\n    particlesJS.load('particles-js', '../assets/data/particles.json', function () {\n      console.log('callback - particles-js config loaded');\n    }, null);\n  }\n  breakpointChangedTwo() {\n    if (this.breakPointObserverTwo.isMatched('(min-width: 565px)')) {\n      this.actTwo = true;\n    }\n  }\n  addAct(newAct) {\n    this.actTwo = newAct;\n  }\n  // public loadScript(url: string) {\n  //   const body = <HTMLDivElement> document.body;\n  //   const script = document.createElement('script');\n  //   script.innerHTML = '';\n  //   script.src = url;\n  //   script.async = true;\n  //   script.defer = true;\n  //   body.appendChild(script);\n  // }\n  // public click(event: google.maps.MapMouseEvent) {\n  //   console.log(event);\n  // }\n  // public openInfo(marker: MapMarker, content: string): void {\n  //   this.mapInfoContent = content;\n  //   this.mapInfo.open(marker);\n  // }\n  ngOnDestroy() {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    // this.subscription.unsubscribe();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module"}