{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\tandd\\\\Documents\\\\mean-td-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\n// declare var google: any;\nexport let MapComponent = /*#__PURE__*/(() => {\n  class MapComponent {\n    constructor(mapBrakePointObserver) {\n      this.mapBrakePointObserver = mapBrakePointObserver;\n      // map: google.maps.Map;\n      // @ViewChild(GoogleMap, { static: false }) mapElem!: GoogleMap;\n      // @ViewChild(MapInfoWindow, { static: false }) mapInfo!: MapInfoWindow;\n      // public google: any;\n      this.mapHeight = '20rem';\n      this.mapWidth = '100%';\n      this.mapCenter = {\n        lat: 41.097255,\n        lng: -84.262551\n      };\n      this.mapZoom = 8;\n      this.mapInfoContent = '';\n      this.mapOptions = {\n        zoomControl: true,\n        scrollwheel: false,\n        disableDoubleClickZoom: true,\n        mapTypeId: \"roadmap\"\n      };\n      this.mapMarkers = [{\n        position: {\n          lat: 41.097255,\n          lng: -84.262551\n        },\n        label: {\n          color: 'black',\n          text: 'Terry Dockery Investigations and Security Services'\n        },\n        title: 'Main Office',\n        info: '300 Oak St, Continental, OH, 45831',\n        options: {\n          animation: google.maps.Animation.BOUNCE\n        }\n      }, {\n        position: {\n          lat: 41.0149902517173,\n          lng: -84.0502639111812\n        },\n        label: {\n          color: 'black',\n          text: 'Service Area'\n        },\n        title: 'Terry Dockery Investigations and Security Services',\n        info: 'Ottawa, OH, Putnam County, 45875',\n        options: {\n          animation: google.maps.Animation.BOUNCE\n        }\n      }, {\n        position: {\n          lat: 41.646464836971916,\n          lng: -83.53340770525851\n        },\n        label: {\n          color: 'black',\n          text: \"Service Area\"\n        },\n        title: 'Terry Dockery Investigations and Security Services',\n        info: 'Toledo, OH, Locus County, All 31 zip codes',\n        options: {\n          animation: google.maps.Animation.BOUNCE\n        }\n      }, {\n        position: {\n          lat: 40.735712050206665,\n          lng: -84.10262203128673\n        },\n        label: {\n          color: 'black',\n          text: \"Service Area\"\n        },\n        title: 'Terry Dockery Investigations and Security Services',\n        info: 'Lima, OH, Allen County, 45801, 45804, 45805',\n        options: {\n          animation: google.maps.Animation.BOUNCE\n        }\n      }, {\n        position: {\n          lat: 41.043680929746166,\n          lng: -83.6495902743783\n        },\n        label: {\n          color: 'black',\n          text: \"Service Area\"\n        },\n        title: 'Terry Dockery Investigations and Security Services',\n        info: 'Findlay, OH, Hancock County, 45839, 45840',\n        options: {\n          animation: google.maps.Animation.BOUNCE\n        }\n      }];\n      this.mapBrakePoint$ = this.mapBrakePointObserver.observe(['(max-width: 1120px)', '(max-width: 1616px)', '(min-width: 1617px)']).pipe(distinctUntilChanged());\n    }\n    ngOnInit() {\n      this.mapBrakePoint$.subscribe(mapBrakePoints => {\n        if (this.mapBrakePointObserver.isMatched('(max-width: 1120px)')) {\n          this.mapHeight = '15rem';\n        } else if (this.mapBrakePointObserver.isMatched('(max-width: 1616px)')) {\n          this.mapHeight = '20rem';\n        } else if (this.mapBrakePointObserver.isMatched('(min-width: 1617px)')) {\n          this.mapHeight = '30rem';\n        }\n      });\n      let map;\n      function initMap() {\n        return _initMap.apply(this, arguments);\n      }\n      function _initMap() {\n        _initMap = _asyncToGenerator(function* () {\n          const {\n            Map\n          } = yield google.maps.importLibrary(\"maps\");\n          map = new Map(document.getElementById(\"map\"), {\n            center: {\n              lat: 41.097255,\n              lng: -84.262551\n            },\n            zoom: 8\n          });\n        });\n        return _initMap.apply(this, arguments);\n      }\n      initMap();\n      // localStorage.setItem('google', JSON.stringify(google));\n      // let gooogle = JSON.parse(localStorage.getItem('google') || '{}');\n      // let gooogle = JSON.parse(g!.toString());\n      // let gooogle = localStorage.getItem('google') === null ? JSON.parse('{}') : JSON.parse(localStorage.getItem('google'));\n      // let gooogle = new BehaviorSubject(JSON.parse(localStorage.getItem('google') ?? '{}'));\n      // let google = JSON.parse(localStorage.getItem('google'));\n      // console.log('Gooogle: ', google, gooogle);\n    }\n\n    click(event) {\n      console.log(event);\n    }\n    openInfo(marker, content) {\n      this.mapInfoContent = content;\n      this.mapInfo.open(marker);\n    }\n  }\n  MapComponent.ɵfac = function MapComponent_Factory(t) {\n    return new (t || MapComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n  };\n  MapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MapComponent,\n    selectors: [[\"app-map\"]],\n    decls: 2,\n    vars: 0,\n    consts: [[\"id\", \"myMapContainer\", 1, \"row\"], [\"id\", \"map\"]],\n    template: function MapComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"#myMapContainer[_ngcontent-%COMP%]{padding:0rem 3.25rem 2rem 3rem}#map[_ngcontent-%COMP%]{height:40rem;width:100%}@media only screen and (max-width: 688px){#myMapContainer[_ngcontent-%COMP%]{padding:0rem 2.5rem 2rem}}@media only screen and (max-width: 591px){#myMapContainer[_ngcontent-%COMP%]{padding:0rem 1.45rem 2rem}}\"]\n  });\n  return MapComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}