{"ast":null,"code":"import { NavigationStart, NavigationEnd } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\n// declare var google: any;\nexport let MapComponent = /*#__PURE__*/(() => {\n  class MapComponent {\n    // map: google.maps.Map;\n    // @ViewChild(GoogleMap, { static: false }) mapElem!: GoogleMap;\n    // @ViewChild(MapInfoWindow, { static: false }) mapInfo!: MapInfoWindow;\n    // public mapHeight: string = '20rem';\n    // public mapWidth: string = '100%';\n    // public mapCenter: google.maps.LatLngLiteral | google.maps.LatLng = { lat:41.097255, lng:-84.262551 };\n    // public mapZoom: number = 8;\n    // public mapInfoContent: string = '';\n    // public mapOptions: google.maps.MapOptions = {\n    //   zoomControl: true,\n    //   scrollwheel: false,\n    //   disableDoubleClickZoom: true,\n    //   mapTypeId: \"roadmap\"\n    // }\n    // public mapMarkers: Array<any> = [\n    //   {\n    //     position: {\n    //       lat:41.097255,\n    //       lng:-84.262551\n    //     },\n    //     label: {\n    //       color: 'black',\n    //       text: 'Terry Dockery Investigations and Security Services'\n    //     },\n    //     title: 'Main Office',\n    //     info: '300 Oak St, Continental, OH, 45831',\n    //     options: {\n    //       animation: google.maps.Animation.BOUNCE,\n    //     }\n    //   },\n    //   {\n    //     position: {\n    //       lat:41.0149902517173,\n    //       lng:-84.0502639111812\n    //     },\n    //     label: {\n    //       color: 'black',\n    //       text: 'Service Area'\n    //     },\n    //     title: 'Terry Dockery Investigations and Security Services',\n    //     info: 'Ottawa, OH, Putnam County, 45875',\n    //     options: {\n    //       animation: google.maps.Animation.BOUNCE,\n    //     }\n    //   },\n    //   {\n    //     position: {\n    //       lat:41.646464836971916,\n    //       lng:-83.53340770525851\n    //     },\n    //     label: {\n    //       color: 'black',\n    //       text: \"Service Area\"\n    //     },\n    //     title: 'Terry Dockery Investigations and Security Services',\n    //     info: 'Toledo, OH, Locus County, All 31 zip codes',\n    //     options: {\n    //       animation: google.maps.Animation.BOUNCE,\n    //     }\n    //   },\n    //   {\n    //     position: {\n    //       lat:40.735712050206665,\n    //       lng:-84.10262203128673\n    //     },\n    //     label: {\n    //       color: 'black',\n    //       text: \"Service Area\"\n    //     },\n    //     title: 'Terry Dockery Investigations and Security Services',\n    //     info: 'Lima, OH, Allen County, 45801, 45804, 45805',\n    //     options: {\n    //       animation: google.maps.Animation.BOUNCE,\n    //     }\n    //   },\n    //   {\n    //     position: {\n    //       lat:41.043680929746166,\n    //       lng:-83.6495902743783,\n    //     },\n    //     label: {\n    //       color: 'black',\n    //       text: \"Service Area\"\n    //     },\n    //     title: 'Terry Dockery Investigations and Security Services',\n    //     info: 'Findlay, OH, Hancock County, 45839, 45840',\n    //     options: {\n    //       animation: google.maps.Animation.BOUNCE,\n    //     }\n    //   },\n    // ];\n    // public readonly mapBrakePoint$: any = this.mapBrakePointObserver.observe(['(max-width: 1120px)','(max-width: 1616px)','(min-width: 1617px)']).pipe(\n    //   distinctUntilChanged()\n    // );\n    // constructor(private readonly mapBrakePointObserver: BreakpointObserver) {}\n    constructor(mapBreakPointObserver, router, route, httpClient) {\n      this.mapBreakPointObserver = mapBreakPointObserver;\n      this.router = router;\n      this.route = route;\n      this.httpClient = httpClient;\n      this.subscription = router.events.subscribe(event => {\n        if (event instanceof NavigationStart) {\n          // this.browserRefresh = !router.navigated;\n          // this.router.navigated = false;\n          // this.router.navigateByUrl(event.url);\n          console.log(\"Moving Map\", this.browserRefresh, event);\n          // if(google === undefined) {\n          // }\n        }\n\n        if (event instanceof NavigationEnd) {\n          this.activeRouteApp = event.url;\n          // this.google = window.google;\n          console.log('Navigation End Map', event.url, this.activeRouteApp);\n        }\n        ;\n        // if (event instanceof NavigationError) {\n        //   this.router.navigateByUrl('/');\n        // }\n      });\n    }\n\n    ngOnInit() {\n      // this.mapBrakePoint$.subscribe((mapBrakePoints: any) => {\n      //   if(this.mapBrakePointObserver.isMatched('(max-width: 1120px)')) {\n      //     this.mapHeight = '15rem';\n      //   } else if(this.mapBrakePointObserver.isMatched('(max-width: 1616px)')) {\n      //     this.mapHeight = '20rem';\n      //   } else if(this.mapBrakePointObserver.isMatched('(min-width: 1617px)')) {\n      //     this.mapHeight = '30rem';\n      //   }\n      // });\n      // let map: google.maps.Map;\n      // async function initMap(): Promise<void> {\n      //   const { Map } = await google.maps.importLibrary(\"maps\") as google.maps.MapsLibrary;\n      //   // let mapEle = document.getElementById('map');\n      //   map = new Map(document.getElementById(\"map\") as HTMLElement, {\n      //     center: { lat:41.097255, lng:-84.262551 },\n      //     zoom: 8,\n      //   });\n      // google.maps.event.addListenerOnce(map, 'idle', () => {\n      //   mapEle?.classList.add('show-map');\n      // });\n      // }\n      // initMap();\n      // localStorage.setItem('google', JSON.stringify(google));\n      // let gooogle = JSON.parse(localStorage.getItem('google') || '{}');\n      // let gooogle = JSON.parse(g!.toString());\n      // let gooogle = localStorage.getItem('google') === null ? JSON.parse('{}') : JSON.parse(localStorage.getItem('google'));\n      // let gooogle = new BehaviorSubject(JSON.parse(localStorage.getItem('google') ?? '{}'));\n      // let google = JSON.parse(localStorage.getItem('google'));\n      // console.log('Gooogle: ', google, gooogle);\n    }\n    ngOnChanges(changes) {\n      for (let i in changes) {\n        console.log(`changes${i}`, changes[i]);\n      }\n    }\n    ngAfterViewInit() {\n      // this.mapBrakePoint$.subscribe((mapBrakePoints: any) => {\n      //   if(this.mapBrakePointObserver.isMatched('(max-width: 1120px)')) {\n      //     this.mapHeight = '15rem';\n      //   } else if(this.mapBrakePointObserver.isMatched('(max-width: 1616px)')) {\n      //     this.mapHeight = '20rem';\n      //   } else if(this.mapBrakePointObserver.isMatched('(min-width: 1617px)')) {\n      //     this.mapHeight = '30rem';\n      //   }\n      // });\n      // let map: google.maps.Map;\n      // async function initMap(): Promise<void> {\n      //   const { Map } = await google.maps.importLibrary(\"maps\") as google.maps.MapsLibrary;\n      //   // let mapEle = document.getElementById('map');\n      //   map = new Map(document.getElementById(\"map\") as HTMLElement, {\n      //     center: { lat:41.097255, lng:-84.262551 },\n      //     zoom: 8,\n      //   });\n      //   // google.maps.event.addListenerOnce(map, 'idle', () => {\n      //   //   mapEle?.classList.add('show-map');\n      //   // });\n      // }\n      // initMap();\n    }\n  }\n  MapComponent.ɵfac = function MapComponent_Factory(t) {\n    return new (t || MapComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n  MapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MapComponent,\n    selectors: [[\"app-map\"]],\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[\"id\", \"myMapContainer\", 1, \"row\"], [\"id\", \"map\"]],\n    template: function MapComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"#myMapContainer[_ngcontent-%COMP%]{padding:0rem 3.25rem 2rem 3rem}#map[_ngcontent-%COMP%]{height:40rem;width:100%}@media only screen and (max-width: 688px){#myMapContainer[_ngcontent-%COMP%]{padding:0rem 2.5rem 2rem}}@media only screen and (max-width: 591px){#myMapContainer[_ngcontent-%COMP%]{padding:0rem 1.45rem 2rem}}\"]\n  });\n  return MapComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}