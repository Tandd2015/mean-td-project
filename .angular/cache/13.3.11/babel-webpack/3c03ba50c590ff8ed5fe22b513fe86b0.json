{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\tandd\\\\Documents\\\\mean-td-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { NavigationStart, NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\n// declare var google: any;\nexport let MapComponent = /*#__PURE__*/(() => {\n  class MapComponent {\n    constructor(mapBreakPointObserver, router, route, httpClient) {\n      this.mapBreakPointObserver = mapBreakPointObserver;\n      this.router = router;\n      this.route = route;\n      this.httpClient = httpClient;\n      this.subscription = new Subscription();\n      this.subscription = router.events.subscribe(event => {\n        if (event instanceof NavigationStart) {\n          // this.browserRefresh = !router.navigated;\n          // this.router.navigated = false;\n          // this.router.navigateByUrl(event.url);\n          console.log(\"Moving Map\", event);\n          // if(google === undefined) {\n          // }\n        }\n\n        if (event instanceof NavigationEnd) {\n          // this.activeRouteApp = event.url;\n          // this.google = window.google;\n          console.log('Navigation End Map', event.url, event);\n        }\n        ;\n        // if (event instanceof NavigationError) {\n        //   this.router.navigateByUrl('/');\n        // }\n      });\n    }\n\n    ngOnInit() {}\n    ngAfterViewInit() {\n      let google;\n      let map;\n      function initMap() {\n        return _initMap.apply(this, arguments);\n      }\n      function _initMap() {\n        _initMap = _asyncToGenerator(function* () {\n          const {\n            Map\n          } = yield google.maps.importLibrary(\"maps\");\n          map = new Map(document.getElementById(\"map\"), {\n            center: {\n              lat: -34.397,\n              lng: 150.644\n            },\n            zoom: 8\n          });\n        });\n        return _initMap.apply(this, arguments);\n      }\n      initMap();\n      // let markersArr: Array<any> = [];\n      // let mapMarkers: Array<any> = [\n      //   {\n      //     position: {\n      //       lat:41.097255,\n      //       lng:-84.262551\n      //     },\n      //     label: {\n      //       color: 'black',\n      //       text: 'Terry Dockery Investigations and Security Services'\n      //     },\n      //     title: 'Main Office',\n      //     info: '300 Oak St, Continental, OH, 45831',\n      //     options: {\n      //       animation: google.maps.Animation.BOUNCE,\n      //     }\n      //   },\n      //   {\n      //     position: {\n      //       lat:41.0149902517173,\n      //       lng:-84.0502639111812\n      //     },\n      //     label: {\n      //       color: 'black',\n      //       text: 'Service Area'\n      //     },\n      //     title: 'Terry Dockery Investigations and Security Services',\n      //     info: 'Ottawa, OH, Putnam County, 45875',\n      //     options: {\n      //       animation: google.maps.Animation.BOUNCE,\n      //     }\n      //   },\n      //   {\n      //     position: {\n      //       lat:41.646464836971916,\n      //       lng:-83.53340770525851\n      //     },\n      //     label: {\n      //       color: 'black',\n      //       text: \"Service Area\"\n      //     },\n      //     title: 'Terry Dockery Investigations and Security Services',\n      //     info: 'Toledo, OH, Locus County, All 31 zip codes',\n      //     options: {\n      //       animation: google.maps.Animation.BOUNCE,\n      //     }\n      //   },\n      //   {\n      //     position: {\n      //       lat:40.735712050206665,\n      //       lng:-84.10262203128673\n      //     },\n      //     label: {\n      //       color: 'black',\n      //       text: \"Service Area\"\n      //     },\n      //     title: 'Terry Dockery Investigations and Security Services',\n      //     info: 'Lima, OH, Allen County, 45801, 45804, 45805',\n      //     options: {\n      //       animation: google.maps.Animation.BOUNCE,\n      //     }\n      //   },\n      //   {\n      //     position: {\n      //       lat:41.043680929746166,\n      //       lng:-83.6495902743783,\n      //     },\n      //     label: {\n      //       color: 'black',\n      //       text: \"Service Area\"\n      //     },\n      //     title: 'Terry Dockery Investigations and Security Services',\n      //     info: 'Findlay, OH, Hancock County, 45839, 45840',\n      //     options: {\n      //       animation: google.maps.Animation.BOUNCE,\n      //     }\n      //   },\n      // ];\n      // map = new Map(document.getElementById(\"map\") as HTMLElement, {\n      //   center: { lat:41.097255, lng:-84.262551 },\n      //   zoom: 8,\n      // });\n      //   const infoWindow = new google.maps.InfoWindow();\n      //   mapMarkers.forEach((marker) => {\n      //     const nMarker = new google.maps.Marker({\n      //       map,\n      //       draggable: false,\n      //       animation: marker.options.animation,\n      //       position: {\n      //         lat: marker.position.lat,\n      //         lng: marker.position.lng,\n      //       },\n      //       title: `${marker.title}\\n ${marker.info}\\n`,\n      //       label: marker.label\n      //     });\n      //     nMarker.addListener(\"click\", () => {\n      //       infoWindow.close();\n      //       infoWindow.setContent(nMarker.getTitle());\n      //       infoWindow.open(nMarker.getMap(), nMarker);\n      //     });\n      //     markersArr.push(nMarker);\n      //   });\n      // }\n      // initMap();\n    }\n  }\n\n  MapComponent.ɵfac = function MapComponent_Factory(t) {\n    return new (t || MapComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n  MapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MapComponent,\n    selectors: [[\"app-map\"]],\n    decls: 2,\n    vars: 0,\n    consts: [[\"id\", \"myMapContainer\", 1, \"row\"], [\"id\", \"map\"]],\n    template: function MapComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"#myMapContainer[_ngcontent-%COMP%]{padding:0rem 3.25rem 2rem 3rem}#map[_ngcontent-%COMP%]{height:40rem;width:100%}@media only screen and (max-width: 688px){#myMapContainer[_ngcontent-%COMP%]{padding:0rem 2.5rem 2rem}}@media only screen and (max-width: 591px){#myMapContainer[_ngcontent-%COMP%]{padding:0rem 1.45rem 2rem}}\"]\n  });\n  return MapComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}