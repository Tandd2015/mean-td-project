{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\tandd\\\\Documents\\\\mean-td-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport let MapComponent = /*#__PURE__*/(() => {\n  class MapComponent {\n    constructor() {}\n    ngOnInit() {}\n    ngAfterViewInit() {\n      function initMap() {\n        return _initMap.apply(this, arguments);\n      }\n      function _initMap() {\n        _initMap = _asyncToGenerator(function* () {\n          const {\n            Map\n          } = yield google.maps.importLibrary(\"maps\");\n          let map;\n          let markersArr = [];\n          let mapMarkers = [{\n            position: {\n              lat: 41.097255,\n              lng: -84.262551\n            },\n            label: {\n              color: 'black',\n              text: 'Terry Dockery Investigations and Security Services'\n            },\n            title: 'Main Office',\n            info: '300 Oak St, Continental, OH, 45831',\n            options: {\n              animation: google.maps.Animation.BOUNCE\n            }\n          }, {\n            position: {\n              lat: 41.0149902517173,\n              lng: -84.0502639111812\n            },\n            label: {\n              color: 'black',\n              text: 'Service Area'\n            },\n            title: 'Terry Dockery Investigations and Security Services',\n            info: 'Ottawa, OH, Putnam County, 45875',\n            options: {\n              animation: google.maps.Animation.BOUNCE\n            }\n          }, {\n            position: {\n              lat: 41.646464836971916,\n              lng: -83.53340770525851\n            },\n            label: {\n              color: 'black',\n              text: \"Service Area\"\n            },\n            title: 'Terry Dockery Investigations and Security Services',\n            info: 'Toledo, OH, Locus County, All 31 zip codes',\n            options: {\n              animation: google.maps.Animation.BOUNCE\n            }\n          }, {\n            position: {\n              lat: 40.735712050206665,\n              lng: -84.10262203128673\n            },\n            label: {\n              color: 'black',\n              text: \"Service Area\"\n            },\n            title: 'Terry Dockery Investigations and Security Services',\n            info: 'Lima, OH, Allen County, 45801, 45804, 45805',\n            options: {\n              animation: google.maps.Animation.BOUNCE\n            }\n          }, {\n            position: {\n              lat: 41.043680929746166,\n              lng: -83.6495902743783\n            },\n            label: {\n              color: 'black',\n              text: \"Service Area\"\n            },\n            title: 'Terry Dockery Investigations and Security Services',\n            info: 'Findlay, OH, Hancock County, 45839, 45840',\n            options: {\n              animation: google.maps.Animation.BOUNCE\n            }\n          }];\n          map = new Map(document.getElementById(\"map\"), {\n            center: {\n              lat: 41.097255,\n              lng: -84.262551\n            },\n            zoom: 8\n          });\n          const infoWindow = new google.maps.InfoWindow();\n          mapMarkers.forEach(marker => {\n            const nMarker = new google.maps.Marker({\n              map,\n              draggable: false,\n              animation: marker.options.animation,\n              position: {\n                lat: marker.position.lat,\n                lng: marker.position.lng\n              },\n              title: `${marker.title}\\n ${marker.info}\\n`,\n              label: marker.label\n            });\n            nMarker.addListener(\"click\", () => {\n              infoWindow.close();\n              infoWindow.setContent(nMarker.getTitle());\n              infoWindow.open(nMarker.getMap(), nMarker);\n            });\n            markersArr.push(nMarker);\n          });\n        });\n        return _initMap.apply(this, arguments);\n      }\n      ;\n      function googleCheck() {\n        return _googleCheck.apply(this, arguments);\n      }\n      function _googleCheck() {\n        _googleCheck = _asyncToGenerator(function* () {\n          if (window.google && window.google.maps) {\n            console.log('Google Maps API is already loaded.');\n            initMap();\n          } else {\n            setTimeout(() => googleCheck(), 250);\n          }\n          ;\n        });\n        return _googleCheck.apply(this, arguments);\n      }\n      ;\n      googleCheck();\n    }\n  }\n  MapComponent.ɵfac = function MapComponent_Factory(t) {\n    return new (t || MapComponent)();\n  };\n  MapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MapComponent,\n    selectors: [[\"app-map\"]],\n    decls: 2,\n    vars: 0,\n    consts: [[\"id\", \"myMapContainer\", 1, \"row\"], [\"id\", \"map\"]],\n    template: function MapComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"#myMapContainer[_ngcontent-%COMP%]{padding:0rem 3.25rem 2rem 3rem}#map[_ngcontent-%COMP%]{height:40rem;width:100%}@media only screen and (min-width: 1617px){#map[_ngcontent-%COMP%]{height:30rem}}@media only screen and (max-width: 1616px){#map[_ngcontent-%COMP%]{height:20rem}}@media only screen and (max-width: 1120px){#map[_ngcontent-%COMP%]{height:15rem}}@media only screen and (max-width: 688px){#myMapContainer[_ngcontent-%COMP%]{padding:0rem 2.5rem 2rem}}@media only screen and (max-width: 591px){#myMapContainer[_ngcontent-%COMP%]{padding:0rem 1.45rem 2rem}}\"]\n  });\n  return MapComponent;\n})();\n;","map":null,"metadata":{},"sourceType":"module"}