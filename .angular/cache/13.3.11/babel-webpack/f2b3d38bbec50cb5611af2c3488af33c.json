{"ast":null,"code":"import { distinctUntilChanged } from 'rxjs/operators';\nimport { NavigationStart, NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./nav-bar/nav-bar.component\";\nconst _c0 = function (a0) {\n  return [a0];\n};\n// declare var google: any;\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    // public google: any = window.google;\n    // public mapHeight: string = '20rem';\n    // public mapWidth: string = '100%';\n    // public mapCenter: google.maps.LatLngLiteral | google.maps.LatLng = { lat:41.097255, lng:-84.262551 };\n    // public mapZoom: number = 8;\n    // public mapInfoContent: string = '';\n    // public mapOptions: google.maps.MapOptions = {\n    //   zoomControl: true,\n    //   scrollwheel: false,\n    //   disableDoubleClickZoom: true,\n    //   mapTypeId: \"roadmap\"\n    // }\n    // public mapMarkers: Array<any> = [\n    //   {\n    //     position: {\n    //       lat:41.097255,\n    //       lng:-84.262551\n    //     },\n    //     label: {\n    //       color: 'black',\n    //       text: 'Terry Dockery Investigations and Security Services'\n    //     },\n    //     title: 'Main Office',\n    //     info: '300 Oak St, Continental, OH, 45831',\n    //     options: {\n    //       animation: google.maps.Animation.BOUNCE,\n    //     }\n    //   },\n    //   {\n    //     position: {\n    //       lat:41.0149902517173,\n    //       lng:-84.0502639111812\n    //     },\n    //     label: {\n    //       color: 'black',\n    //       text: 'Service Area'\n    //     },\n    //     title: 'Terry Dockery Investigations and Security Services',\n    //     info: 'Ottawa, OH, Putnam County, 45875',\n    //     options: {\n    //       animation: google.maps.Animation.BOUNCE,\n    //     }\n    //   },\n    //   {\n    //     position: {\n    //       lat:41.646464836971916,\n    //       lng:-83.53340770525851\n    //     },\n    //     label: {\n    //       color: 'black',\n    //       text: \"Service Area\"\n    //     },\n    //     title: 'Terry Dockery Investigations and Security Services',\n    //     info: 'Toledo, OH, Locus County, All 31 zip codes',\n    //     options: {\n    //       animation: google.maps.Animation.BOUNCE,\n    //     }\n    //   },\n    //   {\n    //     position: {\n    //       lat:40.735712050206665,\n    //       lng:-84.10262203128673\n    //     },\n    //     label: {\n    //       color: 'black',\n    //       text: \"Service Area\"\n    //     },\n    //     title: 'Terry Dockery Investigations and Security Services',\n    //     info: 'Lima, OH, Allen County, 45801, 45804, 45805',\n    //     options: {\n    //       animation: google.maps.Animation.BOUNCE,\n    //     }\n    //   },\n    //   {\n    //     position: {\n    //       lat:41.043680929746166,\n    //       lng:-83.6495902743783,\n    //     },\n    //     label: {\n    //       color: 'black',\n    //       text: \"Service Area\"\n    //     },\n    //     title: 'Terry Dockery Investigations and Security Services',\n    //     info: 'Findlay, OH, Hancock County, 45839, 45840',\n    //     options: {\n    //       animation: google.maps.Animation.BOUNCE,\n    //     }\n    //   },\n    // ];\n    constructor(breakPointObserverTwo, router, route, httpClient) {\n      this.breakPointObserverTwo = breakPointObserverTwo;\n      this.router = router;\n      this.route = route;\n      this.httpClient = httpClient;\n      // public apiLoaded: Observable<boolean>;\n      this.actTwo = true;\n      this.breakPointTwo$ = this.breakPointObserverTwo.observe(['(max-width: 565px)']).pipe(distinctUntilChanged());\n      this.browserRefresh = false;\n      this.subscription = new Subscription();\n      // @ViewChild(GoogleMap, { static: false }) mapElem!: GoogleMap;\n      // @ViewChild(MapInfoWindow, { static: false }) mapInfo!: MapInfoWindow;\n      this.activeRouteApp = '';\n      this.subscription = router.events.subscribe(event => {\n        if (event instanceof NavigationStart) {\n          // this.browserRefresh = !router.navigated;\n          // this.router.navigated = false;\n          // this.router.navigateByUrl(event.url);\n          console.log(\"Moving\", this.browserRefresh, event);\n          // if(google === undefined) {\n          // }\n        }\n\n        if (event instanceof NavigationEnd) {\n          this.activeRouteApp = event.url;\n          // this.google = window.google;\n          console.log('Navigation End App', event.url, this.activeRouteApp);\n        }\n        ;\n        // if (event instanceof NavigationError) {\n        //   this.router.navigateByUrl('/');\n        // }\n      });\n      // this.apiLoaded = this.httpClient.jsonp('https://maps.googleapis.com/maps/api/js?key=AIzaSyD1hlawt2V1ypXbjETNujSZR2gA8reaP8o', 'callback')\n      // .pipe(\n      //   map(() => true),\n      //   catchError(() => of(false)),\n      // );]\\\n      // google = window.google;\n    }\n\n    ngOnInit() {\n      this.breakPointTwo$.subscribe(breakpoints => {\n        this.breakpointChangedTwo();\n      });\n      this.initMap();\n      // console.log('googleApp.ts', google);\n      // let map: google.maps.Map;\n      // async function initMap(): Promise<void> {\n      //   const { Map } = await google.maps.importLibrary(\"maps\") as google.maps.MapsLibrary;\n      //   map = new Map(document.getElementById(\"map\") as HTMLElement, {\n      //     center: { lat:41.097255, lng:-84.262551 },\n      //     zoom: 8,\n      //   });\n      // }\n      // google = window.google;\n      // initMap();\n      // let hello: string = 'Hello';\n      // let world: string = 'World';\n      // window.hello = hello + world;\n      // console.log(\"Hello => \", window.google, google);\n    }\n\n    ngOnChanges(changes) {\n      for (let i in changes) {\n        console.log(`changes${i}`, changes[i]);\n      }\n    }\n    reloadComponent(self, urlToNavigateTo) {\n      console.log(\"Current route I am on: \", this.router.url);\n      const url = self ? this.router.url : urlToNavigateTo;\n      this.router.navigateByUrl('/', {\n        skipLocationChange: true\n      }).then(() => {\n        this.router.navigate([`/${url}`]).then(() => {\n          console.log(`After navigation I am on: ${this.router.url}`);\n        });\n      });\n    }\n    // ngAfterViewInit() {\n    // //   // particlesJS.load('particles-js', '../assets/data/particles.json', function() {\n    // //   //   console.log('callback - particles-js config loaded');\n    // //   // }, null);\n    // //   // console.log('googleApp.ts After', google);\n    // if(!google) {\n    //   console.log('Hello Google');\n    //   const gScript: any = document.createElement('script');\n    //   gScript.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyD1hlawt2V1ypXbjETNujSZR2gA8reaP8o&callback=Function.prototype&libraries=places&v=weekly';\n    //   gScript.type = 'text/javascript';\n    //   document.body.appendChild(gScript);\n    //   document.body.removeChild(gScript);\n    // }\n    // }\n    initMap() {\n      particlesJS.load('particles-js', '../assets/data/particles.json', function () {\n        console.log('callback - particles-js config loaded');\n      }, null);\n    }\n    breakpointChangedTwo() {\n      if (this.breakPointObserverTwo.isMatched('(min-width: 565px)')) {\n        this.actTwo = true;\n      }\n    }\n    addAct(newAct) {\n      this.actTwo = newAct;\n    }\n    // public loadScript(url: string) {\n    //   const body = <HTMLDivElement> document.body;\n    //   const script = document.createElement('script');\n    //   script.innerHTML = '';\n    //   script.src = url;\n    //   script.async = true;\n    //   script.defer = true;\n    //   body.appendChild(script);\n    // }\n    // public click(event: google.maps.MapMouseEvent) {\n    //   console.log(event);\n    // }\n    // public openInfo(marker: MapMarker, content: string): void {\n    //   this.mapInfoContent = content;\n    //   this.mapInfo.open(marker);\n    // }\n    ngOnDestroy() {\n      //Called once, before the instance is destroyed.\n      //Add 'implements OnDestroy' to the class.\n      // this.subscription.unsubscribe();\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 3,\n    vars: 3,\n    consts: [[3, \"ngClass\"], [3, \"newActOne\"], [\"id\", \"particles-js\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"app-nav-bar\", 1);\n        i0.ɵɵlistener(\"newActOne\", function AppComponent_Template_app_nav_bar_newActOne_1_listener($event) {\n          return ctx.addAct($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"router-outlet\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c0, !ctx.actTwo ? \"navBarContainer first-active\" : \"navBarContainer\"));\n      }\n    },\n    directives: [i4.NgClass, i5.NavBarComponent, i2.RouterOutlet],\n    styles: [\".navBarContainer[_ngcontent-%COMP%]{background:#0d81fd;background:linear-gradient(90deg,rgba(9,9,121,1) 0%,rgba(0,161,255,1) 43%,rgba(13,129,253,1) 100%);z-index:2;width:100%;display:grid;background-size:cover;position:fixed;overflow:hidden}@media screen and (max-width: 650px){.navBarContainer[_ngcontent-%COMP%]{height:5rem}}@media screen and (max-width: 565px){.navBarContainer[_ngcontent-%COMP%]{height:5rem;width:100%;display:flex;justify-content:space-between;padding:0;z-index:2}.navBarContainer.first-active[_ngcontent-%COMP%]{height:9rem}}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}