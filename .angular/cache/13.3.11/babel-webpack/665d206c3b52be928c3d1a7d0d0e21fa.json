{"ast":null,"code":"import { MapInfoWindow, GoogleMap } from '@angular/google-maps';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/google-maps\";\nfunction MapComponent_google_map_1_map_marker_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"map-marker\", 5, 6);\n    i0.ɵɵlistener(\"mapClick\", function MapComponent_google_map_1_map_marker_2_Template_map_marker_mapClick_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const marker_r3 = restoredCtx.$implicit;\n      const _r4 = i0.ɵɵreference(1);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.openInfo(_r4, marker_r3.info);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const marker_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"position\", marker_r3.position)(\"label\", marker_r3.label)(\"title\", marker_r3.title)(\"options\", marker_r3.options);\n  }\n}\nfunction MapComponent_google_map_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"google-map\", 2, 3);\n    i0.ɵɵlistener(\"mapClick\", function MapComponent_google_map_1_Template_google_map_mapClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.click($event);\n    });\n    i0.ɵɵtemplate(2, MapComponent_google_map_1_map_marker_2_Template, 2, 4, \"map-marker\", 4);\n    i0.ɵɵelementStart(3, \"map-info-window\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"height\", ctx_r0.mapHeight)(\"width\", ctx_r0.mapWidth)(\"zoom\", ctx_r0.mapZoom)(\"center\", ctx_r0.mapCenter)(\"options\", ctx_r0.mapOptions);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.mapMarkers);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.mapInfoContent);\n  }\n}\n// declare var google: any;\nexport let MapComponent = /*#__PURE__*/(() => {\n  class MapComponent {\n    constructor(mapBrakePointObserver) {\n      this.mapBrakePointObserver = mapBrakePointObserver;\n      // public google: any;\n      this.mapHeight = '20rem';\n      this.mapWidth = '100%';\n      this.mapCenter = {\n        lat: 41.097255,\n        lng: -84.262551\n      };\n      this.mapZoom = 8;\n      this.mapInfoContent = '';\n      this.mapOptions = {\n        zoomControl: true,\n        scrollwheel: false,\n        disableDoubleClickZoom: true,\n        mapTypeId: \"roadmap\"\n      };\n      this.mapMarkers = [{\n        position: {\n          lat: 41.097255,\n          lng: -84.262551\n        },\n        label: {\n          color: 'black',\n          text: 'Terry Dockery Investigations and Security Services'\n        },\n        title: 'Main Office',\n        info: '300 Oak St, Continental, OH, 45831',\n        options: {\n          animation: google.maps.Animation.BOUNCE\n        }\n      }, {\n        position: {\n          lat: 41.0149902517173,\n          lng: -84.0502639111812\n        },\n        label: {\n          color: 'black',\n          text: 'Service Area'\n        },\n        title: 'Terry Dockery Investigations and Security Services',\n        info: 'Ottawa, OH, Putnam County, 45875',\n        options: {\n          animation: google.maps.Animation.BOUNCE\n        }\n      }, {\n        position: {\n          lat: 41.646464836971916,\n          lng: -83.53340770525851\n        },\n        label: {\n          color: 'black',\n          text: \"Service Area\"\n        },\n        title: 'Terry Dockery Investigations and Security Services',\n        info: 'Toledo, OH, Locus County, All 31 zip codes',\n        options: {\n          animation: google.maps.Animation.BOUNCE\n        }\n      }, {\n        position: {\n          lat: 40.735712050206665,\n          lng: -84.10262203128673\n        },\n        label: {\n          color: 'black',\n          text: \"Service Area\"\n        },\n        title: 'Terry Dockery Investigations and Security Services',\n        info: 'Lima, OH, Allen County, 45801, 45804, 45805',\n        options: {\n          animation: google.maps.Animation.BOUNCE\n        }\n      }, {\n        position: {\n          lat: 41.043680929746166,\n          lng: -83.6495902743783\n        },\n        label: {\n          color: 'black',\n          text: \"Service Area\"\n        },\n        title: 'Terry Dockery Investigations and Security Services',\n        info: 'Findlay, OH, Hancock County, 45839, 45840',\n        options: {\n          animation: google.maps.Animation.BOUNCE\n        }\n      }];\n      this.mapBrakePoint$ = this.mapBrakePointObserver.observe(['(max-width: 1120px)', '(max-width: 1616px)', '(min-width: 1617px)']).pipe(distinctUntilChanged());\n    }\n    ngOnInit() {\n      this.mapBrakePoint$.subscribe(mapBrakePoints => {\n        if (this.mapBrakePointObserver.isMatched('(max-width: 1120px)')) {\n          this.mapHeight = '15rem';\n        } else if (this.mapBrakePointObserver.isMatched('(max-width: 1616px)')) {\n          this.mapHeight = '20rem';\n        } else if (this.mapBrakePointObserver.isMatched('(min-width: 1617px)')) {\n          this.mapHeight = '30rem';\n        }\n      });\n      // console.log('Gooogle: ', google);\n    }\n\n    click(event) {\n      console.log(event);\n    }\n    openInfo(marker, content) {\n      this.mapInfoContent = content;\n      this.mapInfo.open(marker);\n    }\n  }\n  MapComponent.ɵfac = function MapComponent_Factory(t) {\n    return new (t || MapComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n  };\n  MapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MapComponent,\n    selectors: [[\"app-map\"]],\n    viewQuery: function MapComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(GoogleMap, 5);\n        i0.ɵɵviewQuery(MapInfoWindow, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mapElem = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mapInfo = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[\"id\", \"myMapContainer\", 1, \"row\"], [\"id\", \"mapElem\", 3, \"height\", \"width\", \"zoom\", \"center\", \"options\", \"mapClick\", 4, \"ngIf\"], [\"id\", \"mapElem\", 3, \"height\", \"width\", \"zoom\", \"center\", \"options\", \"mapClick\"], [\"mapElem\", \"\"], [3, \"position\", \"label\", \"title\", \"options\", \"mapClick\", 4, \"ngFor\", \"ngForOf\"], [3, \"position\", \"label\", \"title\", \"options\", \"mapClick\"], [\"lMarker\", \"mapMarker\"]],\n    template: function MapComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, MapComponent_google_map_1_Template, 5, 7, \"google-map\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.mapElem && ctx.mapMarkers);\n      }\n    },\n    directives: [i2.NgIf, i3.GoogleMap, i2.NgForOf, i3.MapMarker, i3.MapInfoWindow],\n    styles: [\"#myMapContainer[_ngcontent-%COMP%]{padding:0rem 3.25rem 2rem 3rem}#map[_ngcontent-%COMP%]{height:40rem;width:100%}@media only screen and (max-width: 688px){#myMapContainer[_ngcontent-%COMP%]{padding:0rem 2.5rem 2rem}}@media only screen and (max-width: 591px){#myMapContainer[_ngcontent-%COMP%]{padding:0rem 1.45rem 2rem}}\"]\n  });\n  return MapComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}